#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO


        #endif

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mod Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75 37 38 53 68 69>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mod Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL     &kp N1            &kp N2            &kp N3         &kp N4              &kp N5  &none                                                                          &mo 3        &kp N6  &kp N7               &kp N8         &kp N9             &kp N0                &kp MINUS
&kp TAB       &kp Q             &kp W             &kp E          &kp R               &kp T   &none                                                                          &none        &kp Y   &kp U                &kp I          &kp O              &kp P                 &kp BSLH
&kp ESC       &hrml LEFT_GUI A  &hrml LEFT_ALT S  &hrml LCTRL D  &hrml LEFT_SHIFT F  &kp G   &tog 2           &kp ENTER  &kp INS       &kp LGUI   &kp LS(LA(LC(LEFT_GUI)))  &none        &kp H   &hrmr RIGHT_SHIFT J  &hrmr RCTRL K  &hrmr RIGHT_ALT L  &hrmr RIGHT_GUI SEMI  &kp SQT
&kp LSHFT     &kp Z             &kp X             &kp C          &kp V               &kp B                               &kp HOME      &kp PG_UP                                         &kp N   &kp M                &kp COMMA      &kp DOT            &kp FSLH              &kp LA(U)
&kp LEFT_GUI  &kp GRAVE         &kp MINUS         &kp LEFT       &kp RIGHT                   &lt 2 BACKSPACE  &kp DEL    &kp END       &kp PG_DN  &kp ENTER                 &lt 1 ENTER          &kp DOWN             &kp UP         &kp LBKT           &kp RBKT              &mo 0
            >;
        };

        symbols {
            bindings = <
&trans  &kp F1         &kp F2         &kp F3        &kp F4         &kp F5         &trans                                      &trans  &kp F6         &kp F7         &kp F8        &kp F9     &kp F10        &kp F11
&trans  &kp LS(POUND)  &kp LS(UNDER)  &kp LBKT      &kp RBKT       &kp LS(CARET)  &trans                                      &trans  &kp LS(EXCL)   &kp LS(LT)     &kp LS(GT)    &kp EQUAL  &kp LS(AMPS)   &kp F12
&trans  &kp BSLH       &kp LS(DLLR)   &kp LS(LBRC)  &kp LS(RBRC)   &kp LS(STAR)   &trans  &trans  &trans      &trans  &trans  &trans  &kp LS(QMARK)  &kp LS(LPAR)   &kp LS(RPAR)  &kp MINUS  &kp LS(COLON)  &trans
&trans  &kp LS(AT)     &kp FSLH       &kp LS(PIPE)  &kp LS(TILDE)  &kp GRAVE                      &trans      &trans                  &kp LS(PLUS)   &kp LS(PRCNT)  &kp LS(DQT)   &kp SQT    &kp SEMI       &trans
&trans  &trans         &trans         &trans        &trans                        &trans  &trans  &trans      &trans  &trans  &trans                 &trans         &trans        &trans     &trans         &trans
            >;
        };

        nav {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans                                                &trans  &kp F6     &kp F7      &kp F8     &kp F9     &kp F10  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                &trans  &kp PG_UP  &kp INSERT  &trans     &kp HOME   &trans   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans  &trans  &trans  &kp LEFT   &kp DOWN    &kp UP     &kp RIGHT  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans                &trans                  &kp PG_DN  &kp DEL     &kp ENTER  &kp END    &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &kp LEFT_COMMAND      &trans  &trans  &trans             &trans      &trans     &trans     &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
